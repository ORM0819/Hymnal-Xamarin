<?xml version="1.0" encoding="UTF-8" ?>
<views:BaseContentPage
    x:Class="Hymnal.XF.Views.HymnPage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:constans="clr-namespace:Hymnal.XF.Constants"
    xmlns:extensions="clr-namespace:Hymnal.XF.Extensions"
    xmlns:iOS="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core"
    xmlns:models="clr-namespace:Hymnal.XF.Models"
    xmlns:prism="http://prismlibrary.com"
    xmlns:viewModels="clr-namespace:Hymnal.XF.ViewModels"
    xmlns:views="clr-namespace:Hymnal.XF.Views"
    Title="{Binding CurrentHymn.Number, StringFormat='# {0}'}"
    iOS:Page.UseSafeArea="False"
    prism:ViewModelLocator.AutowireViewModel="True"
    x:DataType="viewModels:HymnViewModel"
    x:TypeArguments="viewModels:HymnViewModel"
    AutomationId="HymnPage"
    BackgroundColor="{DynamicResource Color.SecondaryBackground}"
    Visual="Material">

    <ContentPage.ToolbarItems>
        <ToolbarItem
            x:Name="CloseToolbar"
            AutomationId="ClosePageToolbar"
            AutomationProperties.Name="{extensions:Translate AutomationHymnPageClose}"
            Command="{prism:GoBack}"
            Priority="-1"
            Text="{extensions:Translate Generic_Close}" />
        <ToolbarItem
            AutomationId="PlayPauseMusicToolbar"
            AutomationProperties.HelpText="{Binding IsPlaying, Converter={StaticResource TranslateConverter}, ConverterParameter='AutomationHymnPageHelpTextIsPlaying{0}'}"
            AutomationProperties.Name="{extensions:Translate AutomationHymnPagePlayer}"
            Command="{Binding PlayCommand}"
            IconImageSource="{Binding IsPlaying, StringFormat='ToolbarPlaying{0}'}"
            Priority="1" />
        <ToolbarItem
            AutomationId="AddRemoveFavoriteToolbar"
            AutomationProperties.HelpText="{Binding IsFavorite, Converter={StaticResource TranslateConverter}, ConverterParameter='AutomationHymnPageHelpTextIsInFavorites{0}'}"
            AutomationProperties.Name="{extensions:Translate AutomationHymnPageFavorite}"
            Command="{Binding FavoriteCommand}"
            IconImageSource="{Binding IsFavorite, StringFormat='ToolbarFavorite{0}'}"
            Priority="2" />
        <ToolbarItem
            x:Name="SheetToolbar"
            AutomationId="OpenSheet"
            AutomationProperties.Name="{extensions:Translate AutomationHymnPagePianoSheet}"
            Command="{Binding OpenSheetCommand}"
            Priority="3">
            <ToolbarItem.IconImageSource>
                <FontImageSource FontFamily="{x:Static constans:FontAwesomeFamilies.Brands}" Glyph="{x:Static constans:FontAwesomeIcons.ItunesNote}" />
            </ToolbarItem.IconImageSource>
        </ToolbarItem>
        <ToolbarItem
            AutomationId="Share"
            AutomationProperties.Name="{extensions:Translate AutomationHymnPageShare}"
            Command="{Binding ShareCommand}"
            Priority="4">
            <ToolbarItem.IconImageSource>
                <FontImageSource FontFamily="{x:Static constans:FontAwesomeFamilies.Solid}" Glyph="{x:Static constans:FontAwesomeIcons.Share}" />
            </ToolbarItem.IconImageSource>
        </ToolbarItem>
    </ContentPage.ToolbarItems>

    <CarouselView
        CurrentItem="{Binding CurrentHymn}"
        HorizontalScrollBarVisibility="Never"
        ItemsSource="{Binding CarouselHymns}"
        Loop="False"
        PositionChangedCommand="{Binding CarouselViewPositionChangedCommand}">
        <CarouselView.ItemTemplate>
            <DataTemplate x:DataType="models:Hymn">
                <RelativeLayout>
                    <Image
                        Aspect="AspectFill"
                        AutomationProperties.IsInAccessibleTree="False"
                        IsVisible="{Binding Source={RelativeSource AncestorType={x:Type viewModels:HymnViewModel}}, Path=BackgroundImageAppearance}"
                        RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent,
                                                                               Property=Height}"
                        RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent,
                                                                              Property=Width}"
                        Source="{DynamicResource BackgroundImageFile}" />

                    <StackLayout
                        BackgroundColor="{DynamicResource Color.BackgroundHymnLettersFilter}"
                        IsVisible="{Binding Source={RelativeSource AncestorType={x:Type viewModels:HymnViewModel}}, Path=BackgroundImageAppearance}"
                        Opacity="{DynamicResource Opacity.BackgroundHymnLettersFilter}"
                        RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent,
                                                                               Property=Height}"
                        RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent,
                                                                              Property=Width}" />
                    <ScrollView
                        Padding="10,20"
                        RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent,
                                                                               Property=Height}"
                        RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent,
                                                                              Property=Width}"
                        VerticalScrollBarVisibility="Never">
                        <StackLayout Spacing="20">

                            <Label
                                AutomationProperties.HelpText="{Binding Title}"
                                AutomationProperties.Name="{extensions:Translate AutomationHymnPageTitle}"
                                FontSize="{Binding HymnTitleFontSize, Source={RelativeSource AncestorType={x:Type viewModels:HymnViewModel}}}"
                                HorizontalOptions="FillAndExpand"
                                HorizontalTextAlignment="Center"
                                IsVisible="{OnPlatform Default=True,
                                                       Tizen=False}"
                                Text="{Binding Title}"
                                TextColor="{DynamicResource Color.PrimaryText}" />

                            <Label
                                x:Name="hymnContentLabel"
                                Margin="10"
                                AutomationId="HymnContentLabel"
                                AutomationProperties.HelpText="{Binding Content}"
                                AutomationProperties.Name="{extensions:Translate AutomationHymnPageContent}"
                                FontSize="{Binding HymnFontSize, Source={RelativeSource AncestorType={x:Type viewModels:HymnViewModel}}}"
                                HorizontalTextAlignment="Center"
                                LineBreakMode="WordWrap"
                                Text="{Binding Content}"
                                TextColor="{DynamicResource Color.PrimaryText}" />
                        </StackLayout>
                    </ScrollView>

                </RelativeLayout>
            </DataTemplate>
        </CarouselView.ItemTemplate>
    </CarouselView>

</views:BaseContentPage>